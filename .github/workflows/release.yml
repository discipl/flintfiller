name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*.*.*' # Matches tags like v0.4.0

jobs:
  build-flint-filler-linux:
    name: Build Flint Filler Linux Artifact
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Install dependancies
        run: sudo apt-get install libsqlite3-dev libbz2-dev liblzma-dev
      - name: Build Flint Runner
        working-directory: ci
        run: ./gradlew pyinstallerFlintFiller
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false
      - name: Test
        run: ./flintfiller/dist/flintfiller-linux -x data/xml_files/BWBR0011823_2019-02-27_Vreemdelingenwet.xml -d data/json_files/BWBR0011823_2019-02-27_Vreemdelingenwet.json -df data/csv_files/BWBR0011823_2019-02-27_Vreemdelingenwet.csv -pt data/csv_files/BWBR0011823_2019-02-27_Vreemdelingenwet_postagged.csv -fo data/flint_frames_BWBR0011823_2019-02-27_Vreemdelingenwet.json
      - uses: actions/upload-artifact@v2
        with:
          name: flintfiller-linux
          path: flintfiller/dist/flintfiller-linux
  build-flint-filler-mac:
    name: Build Flint Filler MacOS Artifact
    runs-on: [macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Install Python
        run: brew install python
      - name: Install MySQL
        run: brew install mysql
      - name: Install MySQL-Connector
        run: brew install mysql-connector-c
      - name: Build Flint Runner
        working-directory: ci
        run: ./gradlew pyinstallerFlintFiller
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false
      - name: Test
        run: ./flintfiller/dist/flintfiller-macos -x data/xml_files/BWBR0011823_2019-02-27_Vreemdelingenwet.xml -d data/json_files/BWBR0011823_2019-02-27_Vreemdelingenwet.json -df data/csv_files/BWBR0011823_2019-02-27_Vreemdelingenwet.csv -pt data/csv_files/BWBR0011823_2019-02-27_Vreemdelingenwet_postagged.csv -fo data/flint_frames_BWBR0011823_2019-02-27_Vreemdelingenwet.json
      - uses: actions/upload-artifact@v2
        with:
          name: flintfiller-macos
          path: flintfiller/dist/flintfiller-macos
  build-flint-filler-windows:
    name: Build Flint Filler Windows Artifact
    runs-on: [windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Build Flint Runner
        working-directory: ci
        run: ./gradlew pyinstallerFlintFiller
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false
      - name: Test
        run: flintfiller/dist/flintfiller-windows.exe -x data/xml_files/BWBR0011823_2019-02-27_Vreemdelingenwet.xml -d data/json_files/BWBR0011823_2019-02-27_Vreemdelingenwet.json -df data/csv_files/BWBR0011823_2019-02-27_Vreemdelingenwet.csv -pt data/csv_files/BWBR0011823_2019-02-27_Vreemdelingenwet_postagged.csv -fo data/flint_frames_BWBR0011823_2019-02-27_Vreemdelingenwet.json
      - uses: actions/upload-artifact@v2
        with:
          name: flintfiller-windows.exe
          path: flintfiller/dist/flintfiller-windows.exe
  build:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-flint-filler-linux, build-flint-filler-mac, build-flint-filler-windows]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Fetch Tags
        run: git fetch --prune --unshallow --tags -f
      - name: Download FlintFiller Mac
        uses: actions/download-artifact@v2
        with:
          name: flintfiller-macos
          path: assets
      - name: Download FlintFiller Linux
        uses: actions/download-artifact@v2
        with:
          name: flintfiller-linux
          path: assets
      - name: Download FlintFiller Windows
        uses: actions/download-artifact@v2
        with:
          name: flintfiller-windows.exe
          path: assets
      - name: Make FlintRunner executable
        run: chmod +x assets/flintfiller-linux
      - name: Get Release Logs
        id: get_release_logs
        run: |
          LOGS=$(./ci/commitlogs.sh)
          echo "$LOGS"
          LOGS="${LOGS//'%'/'%25'}"
          LOGS="${LOGS//$'\n'/'%0A'}"
          LOGS="${LOGS//$'\r'/'%0D'}"
          echo "$LOGS"
          echo "::set-output name=logs::$LOGS"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
              ${{ steps.get_release_logs.outputs.logs }}
          draft: true
          prerelease: true
      - name: Upload MacOS
        id: upload_macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assets/flintfiller-macos
          asset_name: flintfiller-macos
          asset_content_type: application/octet-stream
      - name: Upload Windows
        id: upload_win
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assets/flintfiller-windows.exe
          asset_name: flintfiller-windows.exe
          asset_content_type: application/octet-stream
      - name: Upload Linux
        id: upload_linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./assets/flintfiller-linux
          asset_name: flintfiller-linux
          asset_content_type: application/octet-stream
